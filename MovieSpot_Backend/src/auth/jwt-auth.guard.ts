import { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';
import { JwtService } from '@nestjs/jwt';

@Injectable()
export class JwtAuthGuard implements CanActivate {
  constructor(private jwtService: JwtService) {}

  canActivate(context: ExecutionContext): boolean {
    const request = context.switchToHttp().getRequest();
    const token = request.headers.authorization?.split(' ')[1];

    if (!token) {
      throw new UnauthorizedException('‚ùå Token manquant');
    }

    try {
      const payload = this.jwtService.verify(token);
      console.log('üõë Token extrait:', token);
      console.log('üõë Payload du JWT:', payload);
      
      if (!payload.sub) {
        throw new UnauthorizedException('‚ùå Token invalide: ID utilisateur manquant.');
      }
      
      request.user = payload; // ‚úÖ Attache l'utilisateur √† la requ√™te
      return true;
    } catch (error) {
      throw new UnauthorizedException('‚ùå Token invalide');
    }
  }
}
